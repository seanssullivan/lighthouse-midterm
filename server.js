// ????????????????????????????????????????????????????????????????
// ????????????????????????? StackOverfull  App ????????????????????????????
// ????????????????????????????????????????????????????????????????

// ?? A Yoga REST api
// ?? 
// ?? Developed by Sean Sullivan and Heisey
// ?? Created on May 01, 2020
// ?? Published on __
// ?? run npm start to run server
// ?? uses nodemon as a dev dependency
// ??
// ?? Using Better Comments for color coding
// ?? The following is the color key for app commenting
// ??  Key   Meaning   Hex 
//     ??    Titles    (#24c5ff)
//     ~~    Notes     (#ff9900)
//     ^^    Requests  (#ff69b4)
//     !!    Errors    (#ff0011)
//     ##    DataBase  (#78f022)
//     **    Security  (#9822f2)
//     $$    WARNING   (#fff700)


// ???????????????????????? File Modules ??????????????????????????
// ?? Data
const dbParams = require('./lib/db.js');

// ?? Routes
const usersRoutes = require("./routes/users");
const widgetsRoutes = require("./routes/widgets");

// ?? Utilities
const morgan = require('./utils/morganCustom');

// ???????????????????????? Node Modules ??????????????????????????
const path = require('path');

// ??????????????????????? Vendor Modules ?????????????????????????
const bodyParser = require("body-parser");
const chalk = require('chalk')
const express = require("express");
const helmet = require("helmet");
const { Pool } = require("pg");
const sass = require("node-sass-middleware");

// ????????????????????????????????????????????????????????????????
// ???????????????????????? Application ???????????????????????????
// ????????????????????????????????????????????????????????????????

// ~~ load .env data into process.env
require('dotenv').config();

// ~~ Web server config
const PORT = process.env.PORT || 8080;
const ENV = process.env.ENV || "development";

// ~~ Initialize app
const app = express();

// ## Initialize DB
const db = new Pool(dbParams);

// ~~ Start morgan
app.use(morgan);

// ~~ Set Helmet
app.use(helmet())

// ~~ Set up template engine
app.set("view engine", "pug");

// ~~ Import public dir
app.use(express.static(path.join(__dirname, '/public')));

// ~~ Parse body
app.use(bodyParser.urlencoded({ extended: true }));

// ~~ Setup sass task runner
app.use("/styles", sass({
  src: __dirname + "/styles",
  dest: __dirname + "/public/styles",
  debug: true,
  outputStyle: 'expanded'
}));


// ~~ Set request time to request obj
app.use((req, res, next) => {

  // ~~ Get Date
  let requestTime = new Date();

  // ~~ Set Date and app name to req obj
  req.requestTime = requestTime.toISOString;

  // ~~ Set App name for logging
  req.appName = 'RESTFULL STACK APP';

  // ~~ Log Data to console
  console.log(chalk.magenta.bold.inverse(`Request Time: ${requestTime}`));

  next();
})

// ?????????????????????????? Routes ??????????????????????????????
app.use("/api/users", usersRoutes(db));
app.use("/api/widgets", widgetsRoutes(db));

// ~~ Landing Page
app.get("/", (req, res) => {
  res.render("index");
});

// ~~ Catch all routes
app.get('*', (req, res, next) => {
  res.status(404).send('sorry you got lost')
})



// ## Connect DB
db.connect(() => {
  console.log(chalk.green.bold.inverse('<<<<< Database successfully connected >>>>>'))
});


// ~~ Connect App
app.listen(PORT, () => {
  console.log(chalk.blue.bold.inverse(`<<<<< App is listening on ${PORT} >>>>>`));
});
